"""
Autogenerated input type of AddWorkToBookcase
"""
input AddWorkToBookcaseInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  userId: Int!
  workKey: String!
}

"""
Autogenerated return type of AddWorkToBookcase.
"""
type AddWorkToBookcasePayload {
  bookcase: Bookcase!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

type Author {
  key: String!
  links: [String!]
  name: String!
}

"""
The connection type for Author.
"""
type AuthorConnection {
  """
  A list of edges.
  """
  edges: [AuthorEdge]

  """
  A list of nodes.
  """
  nodes: [Author]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type AuthorEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Author
}

type Bookcase {
  id: String!

  """
  name of the bookcase
  """
  name: String!

  """
  id of the user the bookcase was made by
  """
  userId: String!

  """
  array of the work key
  """
  workKeys: [String!]!
}

"""
Autogenerated input type of CreateBookcase
"""
input CreateBookcaseInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  name: String!
  userId: Int!
}

"""
Autogenerated return type of CreateBookcase.
"""
type CreateBookcasePayload {
  bookcase: Bookcase!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

type Credential {
  accessToken: String!
  client: String!
  expiry: Int!
  tokenType: String!
  uid: String!
}

type Mutation {
  addWorkToBookcase(
    """
    Parameters for AddWorkToBookcase
    """
    input: AddWorkToBookcaseInput!
  ): AddWorkToBookcasePayload
  createBookcase(
    """
    Parameters for CreateBookcase
    """
    input: CreateBookcaseInput!
  ): CreateBookcasePayload
  removeWorkFromBookcase(
    """
    Parameters for RemoveWorkFromBookcase
    """
    input: RemoveWorkFromBookcaseInput!
  ): RemoveWorkFromBookcasePayload
  userConfirmRegistrationWithToken(confirmationToken: String!): UserConfirmRegistrationWithTokenPayload
  userLogin(email: String!, password: String!): UserLoginPayload
  userLogout: UserLogoutPayload
  userRegister(confirmUrl: String, email: String!, password: String!, passwordConfirmation: String!): UserRegisterPayload
  userResendConfirmationWithToken(confirmUrl: String!, email: String!): UserResendConfirmationWithTokenPayload
  userSendPasswordResetWithToken(email: String!, redirectUrl: String!): UserSendPasswordResetWithTokenPayload
  userUpdatePasswordWithToken(password: String!, passwordConfirmation: String!, resetPasswordToken: String!): UserUpdatePasswordWithTokenPayload
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Query {
  authorsConnection(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    name: String
  ): AuthorConnection!

  """
  The current logged in user
  """
  currentUser: User
  worksConnection(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    title: String
  ): WorkConnection!
}

"""
Autogenerated input type of RemoveWorkFromBookcase
"""
input RemoveWorkFromBookcaseInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  userId: Int!
  workKey: String!
}

"""
Autogenerated return type of RemoveWorkFromBookcase.
"""
type RemoveWorkFromBookcasePayload {
  bookcase: Bookcase!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

type User {
  bookcase: Bookcase!
  email: String!
  id: ID!
  name: String!
}

"""
Autogenerated return type of UserConfirmRegistrationWithToken.
"""
type UserConfirmRegistrationWithTokenPayload {
  authenticatable: User!

  """
  Authentication credentials. Null unless user is signed in after confirmation.
  """
  credentials: Credential
}

"""
Autogenerated return type of UserLogin.
"""
type UserLoginPayload {
  authenticatable: User!
  credentials: Credential!
}

"""
Autogenerated return type of UserLogout.
"""
type UserLogoutPayload {
  authenticatable: User!
}

"""
Autogenerated return type of UserRegister.
"""
type UserRegisterPayload {
  authenticatable: User!

  """
  Authentication credentials. Null if after signUp resource is not active for
  authentication (e.g. Email confirmation required).
  """
  credentials: Credential
}

"""
Autogenerated return type of UserResendConfirmationWithToken.
"""
type UserResendConfirmationWithTokenPayload {
  message: String!
}

"""
Autogenerated return type of UserSendPasswordResetWithToken.
"""
type UserSendPasswordResetWithTokenPayload {
  message: String!
}

"""
Autogenerated return type of UserUpdatePasswordWithToken.
"""
type UserUpdatePasswordWithTokenPayload {
  authenticatable: User!

  """
  Authentication credentials. Resource must be signed_in for credentials to be returned.
  """
  credentials: Credential
}

type Work {
  authors: [Author!]!

  """
  openlibrary ref string /works/OL10000000W
  """
  key: String!
  revision: Int!
  title: String!
}

"""
The connection type for Work.
"""
type WorkConnection {
  """
  A list of edges.
  """
  edges: [WorkEdge]

  """
  A list of nodes.
  """
  nodes: [Work]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type WorkEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Work
}
