"""
Autogenerated input type of AddWorkToBookcase
"""
input AddWorkToBookcaseInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  userId: Int!
  workKey: String!
}

"""
Autogenerated return type of AddWorkToBookcase.
"""
type AddWorkToBookcasePayload {
  bookcase: Bookcase!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

type Author {
  data: AuthorData!
  key: String!
  lastModified: ISO8601Date!
  revision: Int!
}

type AuthorData {
  alternateNames: [String!]
  bio: String
  easternOrder: Boolean
  enumeration: String
  key: String
  links: [AuthorDataLink!]
  name: String!
  personalName: String
  photos: [String!]
  sourceRecords: [String!]
  title: String
  uris: [String!]
}

type AuthorDataLink {
  title: String
  url: String
}

type Bookcase {
  id: String!

  """
  name of the bookcase
  """
  name: String!

  """
  id of the user the bookcase was made by
  """
  userId: String!

  """
  array of the work key
  """
  workKeys: [String!]!
}

"""
Autogenerated input type of CreateBookcase
"""
input CreateBookcaseInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  name: String!
  userId: Int!
}

"""
Autogenerated return type of CreateBookcase.
"""
type CreateBookcasePayload {
  bookcase: Bookcase!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
An ISO 8601-encoded date
"""
scalar ISO8601Date

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type Mutation {
  addWorkToBookcase(
    """
    Parameters for AddWorkToBookcase
    """
    input: AddWorkToBookcaseInput!
  ): AddWorkToBookcasePayload
  createBookcase(
    """
    Parameters for CreateBookcase
    """
    input: CreateBookcaseInput!
  ): CreateBookcasePayload
}

type Query {
  authors(
    """
    A list of all authors, option to filter by name
    """
    name: String
  ): [Author!]!

  """
  The current logged in user
  """
  currentUser: User
  works(
    """
    A list of all works, option to filter by title
    """
    title: String
  ): [Work!]!
}

type User {
  email: String!
  id: ID!
  name: String!
}

type Work {
  authors: [Author!]!
  data: WorkData!

  """
  openlibrary ref string /works/OL10000000W
  """
  key: String!
  lastModified: ISO8601Date!
  revision: Int!
}

type WorkData {
  """
  array of openlibrary ref strings ['/works/OL10000000W',...]
  """
  authors: [String!]!

  """
  array of cover identifiers for openlibrary
  """
  covers: [Int!]
  created: ISO8601DateTime!

  """
  openlibrary ref string /works/OL10000000W
  """
  key: String!
  lastModified: ISO8601Date!
  latestRevision: Int!
  revision: Int!
  title: String!
}
